{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mpilonhle\\\\my-blog-demo\\\\src\\\\context\\\\authContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true); // Start with loading = true\n\n  // Function to fetch user data based on token\n  const fetchUserData = async () => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) {\n      setLoading(false);\n      return;\n    }\n    try {\n      const response = await axios.get(\"http://localhost:5000/api/auth/me\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setUser(response.data); // Set the fetched user data\n      setLoading(false); // Finished loading\n    } catch (err) {\n      console.error(\"Error fetching user data:\", err);\n      // If the token is invalid or user is not found, clear the token\n      setToken(null);\n      localStorage.removeItem(\"token\");\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (token) {\n      fetchUserData(); // Fetch user data when token exists\n    } else {\n      setLoading(false); // No token, set loading to false\n    }\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      token,\n      setToken,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"E0DWxDGm3YsuTxfbmJwZiZx7c7k=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","token","setToken","localStorage","getItem","user","setUser","loading","setLoading","fetchUserData","response","get","headers","Authorization","data","err","console","error","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Mpilonhle/my-blog-demo/src/context/authContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [token, setToken] = useState(localStorage.getItem(\"token\") || null);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true); // Start with loading = true\r\n\r\n  // Function to fetch user data based on token\r\n  const fetchUserData = async () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (!token) {\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/api/auth/me\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      setUser(response.data); // Set the fetched user data\r\n      setLoading(false); // Finished loading\r\n    } catch (err) {\r\n      console.error(\"Error fetching user data:\", err);\r\n      // If the token is invalid or user is not found, clear the token\r\n      setToken(null);\r\n      localStorage.removeItem(\"token\");\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      fetchUserData(); // Fetch user data when token exists\r\n    } else {\r\n      setLoading(false); // No token, set loading to false\r\n    }\r\n  }, [token]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, token, setToken, loading }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAACW,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC;EACzE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9C;EACA,MAAMiB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMR,KAAK,GAAGE,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACH,KAAK,EAAE;MACVO,UAAU,CAAC,KAAK,CAAC;MACjB;IACF;IAEA,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,mCAAmC,EAAE;QACpEC,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUZ,KAAK;QAChC;MACF,CAAC,CAAC;MACFK,OAAO,CAACI,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;MACxBN,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,OAAOO,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEF,GAAG,CAAC;MAC/C;MACAb,QAAQ,CAAC,IAAI,CAAC;MACdC,YAAY,CAACe,UAAU,CAAC,OAAO,CAAC;MAChCV,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDf,SAAS,CAAC,MAAM;IACd,IAAIQ,KAAK,EAAE;MACTQ,aAAa,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,MAAM;MACLD,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB;EACF,CAAC,EAAE,CAACP,KAAK,CAAC,CAAC;EAEX,oBACEL,OAAA,CAACC,WAAW,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAAEf,IAAI;MAAEJ,KAAK;MAAEC,QAAQ;MAAEK;IAAQ,CAAE;IAAAR,QAAA,EAC7DA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACxB,EAAA,CA3CWF,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AA6CzB,eAAeD,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}