{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mpilonhle\\\\my-blog-demo\\\\src\\\\components\\\\PostCard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"../styles/postCard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogList = () => {\n  _s();\n  const [blogPosts, setBlogPosts] = useState([]); // State to store API data\n  const [loading, setLoading] = useState(true); // State to show loading indicator\n  const [error, setError] = useState(null); // State to handle errors\n\n  // Fetch data from the API when the component mounts\n  useEffect(() => {\n    const fetchBlogPosts = async () => {\n      try {\n        const response = await fetch(\"https://api.example.com/blogposts\"); // Replace with your API URL\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch blog posts\");\n        }\n        const data = await response.json();\n        setBlogPosts(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchBlogPosts();\n  }, []); // Empty dependency array to fetch data only once\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 23\n  }, this); // Show loading message while fetching data\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 21\n  }, this); // Show error message if there's an error\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blog-list\",\n    children: blogPosts.map((post, index) => /*#__PURE__*/_jsxDEV(PostCard, {\n      title: post.title,\n      author: post.author,\n      date: post.date,\n      description: post.description,\n      image: post.image,\n      authorImage: post.authorImage,\n      tags: post.tags\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n/*\r\nfunction PostCard({ title }) {\r\n  return (\r\n    <div className=\"blog-card\">\r\n      <img src=\"earth.jpg\" alt=\"Earth from space\" />\r\n      <div className=\"content\">\r\n        <h2>Exploring the World's Natural Wonders: A Nature Lover's Journey</h2>\r\n        <div className=\"author-info\">\r\n          <img src=\"author.jpg\" alt=\"Author\" />\r\n          <p>\r\n            by <strong>John Doe</strong> on May 30, 2023\r\n          </p>\r\n        </div>\r\n        <p>\r\n          As someone who loves nature, there's nothing quite like the thrill of\r\n          exploring the world's most beautiful landscapes. From snow-capped\r\n          mountains to crystal-clear waters, there's no shortage of natural\r\n          wonders to discover...\r\n        </p>\r\n        <a href=\"#\" className=\"read-more\">\r\n          Read article →\r\n        </a>\r\n        <div className=\"tags\">\r\n          <span>Environment</span>\r\n          <span>Climate</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n*/\n_s(BlogList, \"k4UwTUA5JKf/XrteltOtVb6Xk6E=\");\n_c = BlogList;\nexport default BlogList;\nvar _c;\n$RefreshReg$(_c, \"BlogList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","BlogList","_s","blogPosts","setBlogPosts","loading","setLoading","error","setError","fetchBlogPosts","response","fetch","ok","Error","data","json","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","post","index","PostCard","title","author","date","description","image","authorImage","tags","_c","$RefreshReg$"],"sources":["C:/Users/Mpilonhle/my-blog-demo/src/components/PostCard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"../styles/postCard.css\";\r\n\r\nconst BlogList = () => {\r\n  const [blogPosts, setBlogPosts] = useState([]); // State to store API data\r\n  const [loading, setLoading] = useState(true); // State to show loading indicator\r\n  const [error, setError] = useState(null); // State to handle errors\r\n\r\n  // Fetch data from the API when the component mounts\r\n  useEffect(() => {\r\n    const fetchBlogPosts = async () => {\r\n      try {\r\n        const response = await fetch(\"https://api.example.com/blogposts\"); // Replace with your API URL\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch blog posts\");\r\n        }\r\n        const data = await response.json();\r\n        setBlogPosts(data);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchBlogPosts();\r\n  }, []); // Empty dependency array to fetch data only once\r\n\r\n  if (loading) return <div>Loading...</div>; // Show loading message while fetching data\r\n  if (error) return <div>Error: {error}</div>; // Show error message if there's an error\r\n\r\n  return (\r\n    <div className=\"blog-list\">\r\n      {blogPosts.map((post, index) => (\r\n        <PostCard\r\n          key={index}\r\n          title={post.title}\r\n          author={post.author}\r\n          date={post.date}\r\n          description={post.description}\r\n          image={post.image}\r\n          authorImage={post.authorImage}\r\n          tags={post.tags}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\n/*\r\nfunction PostCard({ title }) {\r\n  return (\r\n    <div className=\"blog-card\">\r\n      <img src=\"earth.jpg\" alt=\"Earth from space\" />\r\n      <div className=\"content\">\r\n        <h2>Exploring the World's Natural Wonders: A Nature Lover's Journey</h2>\r\n        <div className=\"author-info\">\r\n          <img src=\"author.jpg\" alt=\"Author\" />\r\n          <p>\r\n            by <strong>John Doe</strong> on May 30, 2023\r\n          </p>\r\n        </div>\r\n        <p>\r\n          As someone who loves nature, there's nothing quite like the thrill of\r\n          exploring the world's most beautiful landscapes. From snow-capped\r\n          mountains to crystal-clear waters, there's no shortage of natural\r\n          wonders to discover...\r\n        </p>\r\n        <a href=\"#\" className=\"read-more\">\r\n          Read article →\r\n        </a>\r\n        <div className=\"tags\">\r\n          <span>Environment</span>\r\n          <span>Climate</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n*/\r\nexport default BlogList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1C;EACAD,SAAS,CAAC,MAAM;IACd,MAAMY,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC,CAAC,CAAC;QACnE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;QAC/C;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCX,YAAY,CAACU,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOP,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAACS,OAAO,CAAC;MACzB,CAAC,SAAS;QACRV,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,IAAIJ,OAAO,EAAE,oBAAOL,OAAA;IAAAiB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC,CAAC,CAAC;EAC3C,IAAId,KAAK,EAAE,oBAAOP,OAAA;IAAAiB,QAAA,GAAK,SAAO,EAACV,KAAK;EAAA;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC,CAAC,CAAC;;EAE7C,oBACErB,OAAA;IAAKsB,SAAS,EAAC,WAAW;IAAAL,QAAA,EACvBd,SAAS,CAACoB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACzBzB,OAAA,CAAC0B,QAAQ;MAEPC,KAAK,EAAEH,IAAI,CAACG,KAAM;MAClBC,MAAM,EAAEJ,IAAI,CAACI,MAAO;MACpBC,IAAI,EAAEL,IAAI,CAACK,IAAK;MAChBC,WAAW,EAAEN,IAAI,CAACM,WAAY;MAC9BC,KAAK,EAAEP,IAAI,CAACO,KAAM;MAClBC,WAAW,EAAER,IAAI,CAACQ,WAAY;MAC9BC,IAAI,EAAET,IAAI,CAACS;IAAK,GAPXR,KAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQX,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BAnB,EAAA,CA9CMD,QAAQ;AAAAiC,EAAA,GAARjC,QAAQ;AA6Ed,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}